#!/bin/bash
export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

BASEDIR=$(cd $(dirname $0); pwd)
################################################################################
# Install Cfengine
################################################################################
dpkg -l | grep -q "cfengine-community" || \
  (
    if [ ! -f cfengine-community_3.2.1-1_debian6_i386.deb ]; then
        wget http://packages/working/debian-squeeze-os-i386/cfengine-community_3.2.1-1_debian6_i386.deb
    fi
    dpkg -i cfengine-community_3.2.1-1_debian6_i386.deb
    wget -qO - cfengine.lab/inputs | bash
    cf-agent -K
  )

################################################################################
# Get dependencies
################################################################################
apt-get update || export http_proxy=http://squid:3128 && apt-get update
apt-get install debian-keyring
apt-get upgrade
apt-get install -y gcc kernel-package linux-source-${KERNEL} libc6-dev \
                   tk libncurses5-dev fakeroot git-core build-essential \
                   zlib1g-dev cryptsetup

# BASEDIR='/var/cache/git'
KERNELVERSION=2.6.35.13
AUFSBRANCH=aufs2.2-35

################################################################################
# get linux
#
if [ ! -f /usr/src/linux-${KERNELVERSION}.tar.bz2 ]; then
    wget -O /usr/src/linux-${KERNELVERSION}.tar.bz2 http://www.kernel.org/pub/linux/kernel/v2.6/longterm/v2.6.35/linux-${KERNELVERSION}.tar.bz2
fi
(cd /usr/src/linux; tar xvjf linux-${KERNELVERSION}.tar.bz2)
[ -h /usr/src/linux ] && unlink /usr/src/linux
[ ! -h /usr/src/linux ] && (cd /usr/src; ln -s linux-${KERNELVERSION} linux)

################################################################################
# get aufs
#
[ ! -d  /var/cache/git ] && mkdir -p /var/cache/git
if [ ! -d  /var/cache/git/aufs2-standalone ];then
    ( cd /var/cache/git; git clone /var/cacgit://git.c3sl.ufpr.br/aufs/aufs2-standalone.git )
else
    ( cd /var/cache/git/aufs2-standalone; git pull)
fi
( cd /var/cache/git/aufs2-standalone; git checkout -b ${AUFSBRANCH} origin/${AUFSBRANCH} )

################################################################################
# patch linux with aufs
#
( cd /usr/src/linux; patch -p1 < /var/cache/git/aufs2-standalone/aufs2-kbuild.patch )
( cd /usr/src/linux; patch -p1 < /var/cache/git/aufs2-standalone/aufs2-base.patch )
( cd /usr/src/linux; patch -p1 < /var/cache/git/aufs2-standalone/proc_map.patch )
( cd /usr/src/linux; patch -p1 < /var/cache/git/aufs2-standalone/aufs2-standalone.patch )
rsync -avzP /var/cache/git/aufs2-standalone/Documentation/   /usr/src/linux/Documentation/
rsync -avzP /var/cache/git/aufs2-standalone/fs/              /usr/src/linux/fs/
cp /var/cache/git/aufs2-standalone/include/linux/aufs_type.h /usr/src/linux/include/linux/aufs_type.h

################################################################################
# build the kernel package and install it
#
( cd /usr/src/linux; fakeroot make-kpkg clean )
cp ${BASEDIR}/soekris-kernel/config-${KERNELVERSION} /usr/src/linux/.config
( cd /usr/src/linux ; fakeroot make-kpkg --append-to-version '' --revision 1 kernel_image )
dpkg -i /usr/src/linux-image-${KEFNELVERSION}-net5501_1_i386.deb


################################################################################
# create an initrd
#
[ ! -d /etc/initramfs-tools/.git ] && (cd /etc/initramfs-tools; git init && find * -type f -exec git add {} \; && git commit -a -m "initial commit")
(cd /etc/initramfs-tools; git branch | grep -q 'aufs-2.6' ) || (cd /etc/initramfs-tools; git checkout -b aufs-2.6 HEAD)
(cd /etc/initramfs-tools; git branch | grep -q '* aufs-2.6')|| (cd /etc/initramfs-tools; git checkout aufs-2.6)

rsync -avzP ${BASEDIR}/soekris-kernel/initramfs-tools/ /etc/initramfs-tools/
(cd /etc/initramfs-tools; find * -type f -exec git add {} \; && git commit -a -m "adding files for soekris build")

mkinitramfs -o /tmp/initrd.img-${KERNELVERSION}-net5501 ${KERNELVERSION}-net5501

################################################################################
# inspect the initrd
################################################################################
[ -d /tmp/initrd.d ] && rm -fr  /tmp/initrd.d
[ ! -d /tmp/initrd.d ] && mkdir -p /tmp/initrd.d
(cd /tmp/initrd.d; gzip -dc /tmp/initrd.img-${KERNELVERSION}-net5501 | cpio -idm; find *)



